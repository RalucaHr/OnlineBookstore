@using PagedList.Mvc;
@using PagedList;
@model DTA.Web.ViewModels.BooksViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    if (Session["currentGrouping"] == null)
    {
        Session["currentGrouping"] = "All";
    }
    var p1 = Session["currentGrouping"].ToString();
    var minPriceCached = Session["currentminPrice"].ToString();
    var maxPriceCached = Session["currentmaxPrice"].ToString();
}
<input type="hidden" id="PassingToJavaScript1" value=@p1>
<script src="~/js/popper.min.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/plugins.js"></script>
<script src="~/js/Active.js"></script>
<script src="~/Scripts/jquery-3.2.1.min.js"></script>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script>
    var p1 = document.getElementById('PassingToJavaScript1').value;

</script>


<!-- Start Shop Page -->
<br />
<div class="page-shop-sidebar left--sidebar bg--white section-padding--lg">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-12 order-2 order-lg-1 md-mt-40 sm-mt-40">
                <div class="shop__sidebar">
                    <br />
                    <aside class="wedget__categories pro--range">
                        <h3 class="wedget__title">Filter by title</h3>
                        <div class="content-shopby">
                            <div>
                                @using (Html.BeginForm("Index", "Books", FormMethod.Get))
                                {
                                    <p>
                                        @Html.TextBox("searchString", Session["currentSearchString"] as string)
                                        <input id="minValue" type="hidden" name="minPrice" value="@Int32.Parse(minPriceCached)" />
                                        <input id="maxValue" type="hidden" name="maxPrice" value="@Int32.Parse(maxPriceCached)" />
                                        <input id="sortingParameter" type="hidden" name="sortingParameter" value="@Session["currentSorting"].ToString()" />
                                        <input id="groupingParameter" type="hidden" name="groupingParameter" value="@Session["currentGrouping"].ToString()" />
                                        <button type="submit" class="btn btn-dark btn-sm" style="float:right"> Search </button>
                                    </p>
                                }
                            </div>
                        </div>
                    </aside>
                    <br />
                    <aside class="wedget__categories poroduct--cat">
                        <h3 class="wedget__title">CATEGORY</h3>
                        <ul>
                            @foreach (var item in Model.Categories)
                            {
                                <li>@Html.ActionLink(item.Key, "Index", new { searchString = Session["currentSearchString"].ToString(), groupingParameter = item.Key, sortingParameter = Session["currentSorting"].ToString(), minPrice = Int32.Parse(minPriceCached), maxPrice = Int32.Parse(maxPriceCached) })<span style="float:right">(@item.Value) </span></li>
                            }
                        </ul>
                    </aside>
                    <br />
                    <aside class="wedget__categories pro--range">
                        <h3 class="wedget__title">Filter by price</h3>
                        <div class="content-shopby">
                            <div class="price_filter s-filter clear">
                                @using (Html.BeginForm("Index", "Books", FormMethod.Get))
                                {
                                    <div class="price--output">
                                        <label for="minValue">Price from:</label>
                                        <input style="float:right;" id="minValue" type="number" name="minPrice" value="@Int32.Parse(minPriceCached)" />
                                        <label for="maxValue">Price To:</label>
                                        <input style="float:right" id="maxValue" type="number" name="maxPrice" value="@Int32.Parse(maxPriceCached)" />
                                        <input id="sortingParameter" type="hidden" name="sortingParameter" value="@Session["currentSorting"].ToString()" />
                                        <input id="groupingParameter" type="hidden" name="groupingParameter" value="@Session["currentGrouping"].ToString()" />
                                        <input id="searchString" type="hidden" name="searchString" value="@Session["currentSearchString"].ToString()" />
                                    </div>
                                    <div style="margin-top:10px" class="price--filter">
                                        <input type="submit" value="Filter" class="btn btn-dark btn-sm" />
                                    </div>
                                }
                            </div>
                        </div>
                    </aside>
                    <br />
                    <aside class="wedget__categories pro--range">
                        <div class="content-shopby">
                            <div class="price_filter s-filter clear">
                                <div>
                                    @using (Html.BeginForm("Index", "Books", FormMethod.Get))
                                    {
                                        <button type="submit" class="btn btn-dark btn-sm"> Reset All Filters</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </aside>
                </div>
            </div>
            <div class="col-lg-9 col-12 order-1 order-lg-2">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="shop__list__wrapper d-flex flex-wrap flex-md-nowrap justify-content-between">                            
                            <p>Showing @Model.Books.FirstItemOnPage to @Model.Books.LastItemOnPage of @Model.Books.TotalItemCount Books</p>
                            <div class="orderby__wrapper">
                                <!--Drop down for sorting-->
                                <span>Sort By</span>
                                @Html.DropDownList("sortingDropDown", new List<SelectListItem>()
                           {
                               new SelectListItem(){Text="Price(ASC)", Value="Price(ASC)"},
                               new SelectListItem(){Text="Price(DESC)", Value="Price(DESC)"},
                               new SelectListItem(){Text="Title(A-Z)", Value="Title(A-Z)" },
                               new SelectListItem(){Text="Title(Z-A)", Value="Title(Z-A)"}

                           }, Session["currentSorting"].ToString()/*,new { @onchange = "callChangefunc(this.value)"}*/)

                                <input id="minPriceCached" type="hidden" name="name" value="@Int32.Parse(minPriceCached)" />
                                <input id="maxPriceCached" type="hidden" name="name" value="@Int32.Parse(maxPriceCached)" />
                                <input id="searchString" type="hidden" name="searchString" value="@Session["currentSearchString"].ToString()" />

                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab__container">
                    <div class="shop-grid tab-pane fade show active" id="nav-grid" role="tabpanel">
                        <div class="row">
                            @foreach (var item in Model.Books)
                            {
                                <!-- Start Single Product -->
                                <div class="product product__style--3 col-lg-4 col-md-4 col-sm-6 col-12">
                                    <div class="product__thumb">
                                        <a class="first__img" href="@Url.Action("Details", "Books", new { id = item.BookId})"><img class="cover" src="@Url.Content(item.Cover)" /></a>
                                        <div class="hot__box">
                                            <span class="hot-label">@Html.DisplayFor(modelItem => item.Category.Title)</span>
                                        </div>
                                    </div>
                                    <div class="product__content content--center">
                                        <h4>@Html.ActionLink(item.Title, "Details", "Books", new { id = item.BookId }, htmlAttributes: null)</h4>
                                        <ul class="prize d-flex">
                                            <li>@Html.DisplayFor(modelItem => item.Price)</li>
                                            @using (Html.BeginForm("Add", "Ecommerce", new { param = 2 }, FormMethod.Post))
                                            {
                                                @Html.Hidden("BookId", item.BookId)
                                                <button type="submit" class="btn btn-sm" onclick="increaseCartIcon()"><i class="bi bi-shopping-bag4"></i></button>
                                            }
                                        </ul>                                       
                                    </div>
                                </div>
                                <!-- End Single Product -->
                            }

                        </div>
                        @Html.PagedListPager(Model.Books, page => Url.Action("Index",
                        new { page, groupingParameter = Session["currentGrouping"], sortingParameter = Session["currentSorting"].ToString(), minPrice = Int32.Parse(minPriceCached), maxPrice = Int32.Parse(maxPriceCached) }))
                    </div>
                </div>
            </div>
        </div>
        <script>


            $("#sortingDropDown").change( function () {
                var selectedId = $(this).val();
                window.location.href = '@Url.Action("Index", "Books")' + '?sortingParameter=' + selectedId + '&groupingParameter=' + p1 + '&minPrice=' + document.getElementById('minPriceCached').value + '&maxPrice=' + document.getElementById('maxPriceCached').value + '&searchString=' + document.getElementById('searchString').value;

            });
        </script>
    </div>
</div>
<!-- End Shop Page -->